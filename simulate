#!/bin/bash
# Uses GHDL commands to syntax check, compile, then prepare for gdkwave simulation
# Calls gdkwave to simulate logical design

SIM=out
SRC_DIR=work
TST_DIR=tst
GTK_FILE=${SIM}/gtk.vcd
#UUT=Full_Adder_Nbit_tb
#UUT=Multiplier_tb
UUT=MAC_tb

ADDER_1bit_SRC="${SRC_DIR}/Full_Adder_1bit.vhd ${TST_DIR}/Full_Adder_1bit_TB.vhd"
ADDER_Nbit_SRC="${SRC_DIR}/Full_Adder_* ${TST_DIR}/Full_Adder_Nbit_TB.vhd"
Multiplier_SRC="${ADDER_Nbit_SRC} ${SRC_DIR}/Multiplier.vhd ${TST_DIR}/Multiplier_TB.vhd"
#MAC_SRC="${Multiplier_SRC} ${SRC_DIR}/MAC.vhd ${TST_DIR}/MAC_TB.vhd"
MAC_SRC="${SRC_DIR}/MAC.vhd ${TST_DIR}/MAC_TB.vhd"
simulate() {
	# Define source code to build/simulate
	#SRC="${ADDER_Nbit_SRC}"
	#SRC="${Multiplier_SRC}"
	SRC="${MAC_SRC}"

	# 1. Syntax check
	echo "1. SYNTAX"
	ghdl -s --ieee=synopsys --workdir=${SIM} ${SRC} || return 1
	# 2. Compile
	echo "2. COMPILE"
	ghdl -a --ieee=synopsys --workdir=${SIM} ${SRC} || return 1
	# 3. Generate simulation
	echo "3. RUN"
	ghdl -r --ieee=synopsys --workdir=${SIM} ${UUT} --vcd=${GTK_FILE} || return 1
	# 4. Run simulation
	echo "2. SIMULATE"
	gtkwave ${GTK_FILE}
}

simulate ${@} || echo "FAILED"
