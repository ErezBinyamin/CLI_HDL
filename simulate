#!/bin/bash
# Uses GHDL commands to syntax check, compile, then prepare for gdkwave simulation
# Calls gdkwave to simulate logical design

# Easy controll for switching simulations
	# 1 Ripple Carry Adder
	# 2 Multiplier
	# 3 MAC Unit
	# 4 MAC Unit with BIST
DESIGN=${1:-4}
###################################################################
STOP_TIME="10000ns"
SIM=out
SRC_DIR=work
TST_DIR=tst
GTK_FILE=${SIM}/gtk.vcd

ADDER_1bit_SRC="${SRC_DIR}/Full_Adder_1bit.vhd"
ADDER_Nbit_SRC="${ADDER_1bit_SRC} ${SRC_DIR}/Full_Adder_Nbit.vhd"
Multiplier_SRC="${ADDER_Nbit_SRC} ${SRC_DIR}/Multiplier.vhd"
MAC_SRC="${Multiplier_SRC} ${SRC_DIR}/MAC.vhd"
BIST_MAC_SRC="${MAC_SRC} ${SRC_DIR}/LFSR.vhd ${SRC_DIR}/MISR.vhd ${SRC_DIR}/BIST_MAC.vhd"

ADDER_1bit_TB="${TST_DIR}/Full_Adder_1bit_TB.vhd"
ADDER_Nbit_TB="${TST_DIR}/Full_Adder_Nbit_TB.vhd"
Multiplier_TB="${TST_DIR}/Multiplier_TB.vhd"
MAC_TB="${TST_DIR}/MAC_TB.vhd"
BIST_MAC_TB="${TST_DIR}/BIST_MAC_TB.vhd"
simulate() {
	# Define source code to build/simulate
	[ $DESIGN -eq 1 ] && SRC="${ADDER_Nbit_SRC} ${ADDER_Nbit_TB}"	# Ripple Carry Adder
	[ $DESIGN -eq 2 ] && SRC="${Multiplier_SRC} ${Multiplier_TB}"	# Multiplier
	[ $DESIGN -eq 3 ] && SRC="${MAC_SRC} ${MAC_TB}"			# MAC Unit
	[ $DESIGN -eq 4 ] && SRC="${BIST_MAC_SRC} ${BIST_MAC_TB}"	# MAC Unit with BIST

	# Specify a unit under test
	[ $DESIGN -eq 1 ] && UUT=Full_Adder_Nbit_tb			# Ripple Carry Adder
	[ $DESIGN -eq 2 ] && UUT=Multiplier_tb				# Multiplier
	[ $DESIGN -eq 3 ] && UUT=MAC_tb					# MAC Unit
	[ $DESIGN -eq 4 ] && UUT=BIST_MAC_tb				# MAC Unit with BIST

	# 1. Syntax check
	echo "1. SYNTAX"
	ghdl -s --ieee=synopsys --workdir=${SIM} ${SRC} || return 1
	# 2. Compile
	echo "2. COMPILE"
	ghdl -a --ieee=synopsys --workdir=${SIM} ${SRC} || return 1
	# 3. Generate simulation
	echo "3. RUN"
	ghdl -r --ieee=synopsys --workdir=${SIM} ${UUT} --vcd=${GTK_FILE} --stop-time=${STOP_TIME} || return 1
	# 4. Run simulation
	echo "2. SIMULATE"
	gtkwave ${GTK_FILE}
}

simulate ${@} || echo "FAILED"
